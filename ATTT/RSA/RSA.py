from gmpy2 import isqrt, powmod
from gmpy2 import mpz, invert
import base64

def C1():       
    N = mpz("179769313486231590772930519078902473361797697894230657273430081157732675805505620686985379449212982959585501387537164015710139858647833778606925583497541085196591615128057575940752635007475935288710823649949940771895617054361149474865046711015101563940680527540071584560878577663743040086340742855278549092581")
    A = isqrt(N) + 1
    x = isqrt((A * A) - N)
    p = A - x
    q = A + x
    print("p = ", p)
    print("q = ", q)

C1()
print('\n')

def C2():
    N = mpz("648455842808071669662824265346772278726343720706976263060439070378797308618081116462714015276061417569195587321840254520655424906719892428844841839353281972988531310511738648965962582821502504990264452100885281673303711142296421027840289307657458645233683357077834689715838646088239640236866252211790085787877")
    A = isqrt(N) + 1
    x = isqrt((A * A) - N)
    while(N != (A*A - x*x)):
        A = A + 1
        x = isqrt((A * A) - N)
    p = A - x
    q = A + x
    print("p = ", p)
    print("q = ", q)
    
C2()
print('\n')

def C3():
    N = mpz("720062263747350425279564435525583738338084451473999841826653057981916355690188337790423408664187663938485175264994017897083524079135686877441155132015188279331812309091996246361896836573643119174094961348524639707885238799396839230364676670221627018353299443241192173812729276147530748597302192751375739387929")
    A = isqrt(24 * N) + 1
    x = isqrt((A * A) - (24 * N))
    p = (A - x) / 6
    q = (A + x) / 4
    print("p = ", p)
    print("q = ", q)
    
C3()
print('\n')

class A_F:
    def ki_tu(self,x):
        tra_ve=x
        return getattr(self, 'KT_' + str(x),lambda:tra_ve)()
    def KT_10(self):
        return "A"
    def KT_11(self):
        return "B"
    def KT_12(self):
        return "C"
    def KT_13(self):
        return "D"
    def KT_14(self):
        return "E"
    def KT_15(self):
        return "F"
def _10_to_16(n):
    kq=''
    while n!=0:
        du=n%16
        kq=str(A_F().ki_tu(du))+kq
        n=n//16
    return kq

def C4():
    N = mpz("179769313486231590772930519078902473361797697894230657273430081157732675805505620686985379449212982959585501387537164015710139858647833778606925583497541085196591615128057575940752635007475935288710823649949940771895617054361149474865046711015101563940680527540071584560878577663743040086340742855278549092581")
    A = isqrt(N) + 1
    x = isqrt((A * A) - N)
    p = A - x
    q = A + x
    on = (p - 1) * (q - 1)
    e = 65537
    d = invert(e, on)
    y = mpz("22096451867410381776306561134883418017410069787892831071731839143676135600120538004282329650473509424343946219751512256465839967942889460764542040581564748988013734864120452325229320176487916666402997509188729971690526083222067771600019329260870009579993724077458967773697817571267229951148662959627934791540")
    x = powmod(y, d, N)
    #print(hex(x))
    print("x = ", x)
    print()
    res = _10_to_16(x)
    #0x20805907610b524330594e51d5dbbf643f09603731e9817111392d0c64e2739959a092d4daf979d387520ea7e577af9eb50a29f736925e810ab2fb4640e091a0f73252cb669d5b62b26764190ed188239fe71e1a7cb9e935d2db55c98b024e1dae46d00466163746f72696e67206c65747320757320627265616b205253412e
    to_ascii = str(base64.b16decode(res[(res.index("00")+2):]))[2:-1]
    print("In ascii: ", to_ascii)
    
C4()